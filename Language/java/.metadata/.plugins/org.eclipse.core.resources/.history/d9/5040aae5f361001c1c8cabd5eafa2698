package turing;

import java.util.ArrayDeque;
import java.util.Deque;
import java.util.Iterator;
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.stream.Stream;

public class Rotate {

	public static void main(String[] args) {
		int[] nums = new int[] { 4, 5, 6, 7, 8, 9};
		int k = 5;
		
		useDeque(nums, k);
		
	}
	
	public static int[] useDeque(int[] nums, int k) {
		Deque<Integer> dequeue = new ArrayDeque<>();
	
		for(Integer anItem : nums) {
			dequeue.addLast(anItem);
			System.out.println("added: " + anItem);
		}
		
		for(int i = 0 ; i < k ; i++) {
			int removed = dequeue.removeLast();
			dequeue.addFirst(removed);
		}
		
		System.out.println("size : " + dequeue.size());

		int[] result = new int[dequeue.size()];
		
		int size = dequeue.size();
		for(int i = 0 ; i < size ; i++) {
			result[i] = dequeue.removeFirst();
			System.out.println("result: " + result[i]);
		}
		
		return result;
	}
	
	public static int[] useRaw(int k) {
		
		int[] nums = new int[] { 4, 5, 6, 7, 8, 9};
		
		
		
	}
}
